{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/pages/About.js","component/pages/NotFound.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kTAGMA,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAErE,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAAWF,MAE5G,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAOsBC,IAAMC,IAAI,8CAPhC,OAOUN,EAPVE,EAAAK,KAQI9B,KAAKY,SAAS,CAACzB,SAAUoC,EAAIQ,OARjC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAYI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAdpBzC,EAAA,CAA8B0C,aAoBjBC,EAAW5D,EAAQ4D,iBCkBjBC,6MAzDbzD,MAAQ,CACN0D,iBAAiB,KAGnBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IAAMc,OAAN,8CAAAlD,OAA2DF,IAFrD,OAGZqB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAH/BmC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAMZd,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAN/B,wBAAAmC,EAAAO,SAAAV,EAAAtB,KAAA,4IAUP,IAAA4C,EAAA5C,KAAA6C,EAC0B7C,KAAKmC,MAAM9C,QAArCC,EADAuD,EACAvD,GAAIwD,EADJD,EACIC,KAAMC,EADVF,EACUE,MAAOC,EADjBH,EACiBG,MACjBR,EAA0BxC,KAAKlB,MAA/B0D,gBAEP,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACDL,EAAYK,EAAZL,SACP,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,uBACbhB,EAAAb,EAAAc,cAAA,UACGY,EADH,IACU,IACRb,EAAAb,EAAAc,cAAA,KAAGgB,QAAS,kBAAMN,EAAKhC,SAAS,CAAC4B,iBAAkBI,EAAK9D,MAAM0D,mBAC3DS,UAAU,kBAAkBE,MAAO,CAACC,OAAQ,aAC/CnB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,eAAeE,MAAO,CAACC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAC3EJ,QAASN,EAAKH,cAAcc,KAAKX,EAAMtD,EAAIqB,KAC9CsB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAE,gBAAAjE,OAAkBF,IACxB2C,EAAAb,EAAAc,cAAA,KAAGe,UAAU,oBACVE,MAAO,CAACC,OAAQ,UAAWC,MAAO,QAASC,MAAO,QAASI,YAAa,YAG9ElB,EAEGP,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCF,GACxCd,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,iBAA+CD,IAGjD,eA3CIX,aCmBPsB,mLAnBX,OACE1B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACD7B,EAAY6B,EAAZ7B,SACP,OACE8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMwC,SAAP,KACE3B,EAAAb,EAAAc,cAAA,MAAIe,UAAU,kBACZhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,WADF,SAGC9D,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAAC2B,EAAD,CAAS9C,IAAK1B,EAAQC,GAAID,QAASA,gBAZ5BgD,aCAjByB,EAAS,SAAC3B,GAAU,IACjB4B,EAAY5B,EAAZ4B,SACP,OACE9B,EAAAb,EAAAc,cAAA,OAAKe,UAAU,+DACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,KAAG8B,KAAK,IAAIf,UAAU,gBAAgBc,GACtC9B,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,sBACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YAAWhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBAA/C,UAEFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAAWhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBAA1D,SAEFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAAWhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,oBAApD,gBASda,EAAOG,aAAe,CACpBF,SAAU,UAMGD,QCjCAI,EAAA,WACb,OACEjC,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aAAd,yBACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,iCACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,kBAAb,aCLSkB,EAAA,WACb,OACElC,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aAAYhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,OAA1B,mBACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,8DCFAmB,EAAiB,SAAAC,GAA8D,IAA5DC,EAA4DD,EAA5DC,MAAOxB,EAAqDuB,EAArDvB,KAAM9B,EAA+CqD,EAA/CrD,MAAOuD,EAAwCF,EAAxCE,YAAavF,EAA2BqF,EAA3BrF,KAAMwF,EAAqBH,EAArBG,SAAUC,EAAWJ,EAAXI,MACxE,OACExC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,cACbhB,EAAAb,EAAAc,cAAA,SAAOwC,QAAS5B,GAAOwB,GACvBrC,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN8D,KAAMA,EACNG,UAAW0B,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbvD,MAAOA,EACPwD,SAAUA,IAEXC,GAASxC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,oBAAoBwB,KAenDL,EAAeH,aAAe,CAC5BjF,KAAM,QAGOoF,QC2CAS,6MA1Eb/F,MAAQ,CACNgE,KAAQ,GACRC,MAAQ,GACRC,MAAQ,GACR8B,OAAQ,MAGVC,+CAAW,SAAAzD,EAAOX,EAAUqE,GAAjB,IAAAC,EAAAnC,EAAAC,EAAAC,EAAAkC,EAAA3D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTqD,EAAEG,iBADOF,EAEoBnF,EAAKhB,MAA3BgE,EAFEmC,EAEFnC,KAAMC,EAFJkC,EAEIlC,MAAOC,EAFXiC,EAEWjC,MAEP,KAATF,EAJK,CAAArB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAACkE,OAAQ,CAAChC,KAAM,sBALvBrB,EAAA2D,OAAA,oBAQK,KAAVrC,EARK,CAAAtB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAACkE,OAAQ,CAAC/B,MAAO,uBATxBtB,EAAA2D,OAAA,oBAYK,KAAVpC,EAZK,CAAAvB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAACkE,OAAQ,CAAC9B,MAAO,uBAbxBvB,EAAA2D,OAAA,yBAiBHF,EAAa,CACjBpC,OACAC,QACAC,SApBOvB,EAAAE,KAAA,GAsBgBC,IAAMyD,KAAK,6CAA8CH,GAtBzE,QAsBH3D,EAtBGE,EAAAK,KAuBTnB,EAAS,CAAC3B,KAAM,cAAeO,QAASgC,EAAIQ,OAE5CjC,EAAKc,SAAS,CACZkC,KAAQ,GACRC,MAAQ,GACRC,MAAQ,GACR8B,OAAQ,KAGVhF,EAAKqC,MAAMmD,QAAQC,KAAK,KAhCf,yBAAA9D,EAAAO,SAAAV,EAAAtB,mEAmCXwE,SAAW,SAAAQ,GAAC,OAAIlF,EAAKc,SAAL3B,OAAAuG,EAAA,EAAAvG,CAAA,GAAgB+F,EAAES,OAAO3C,KAAOkC,EAAES,OAAOzE,iFAEhD,IAAA4B,EAAA5C,KAAA0F,EAC8B1F,KAAKlB,MAAnCgE,EADA4C,EACA5C,KAAMC,EADN2C,EACM3C,MAAOC,EADb0C,EACa1C,MAAO8B,EADpBY,EACoBZ,OAC3B,OACE7C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACDL,EAAYK,EAAZL,SACP,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,eAGAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAM6C,SAAUnC,EAAKmC,SAASxB,KAAKX,EAAMjC,IACvCsB,EAAAb,EAAAc,cAACyD,EAAD,CAAgBrB,MAAM,OAAOxB,KAAK,OAAOyB,YAAY,aAAavD,MAAO8B,EACzD0B,SAAU5B,EAAK4B,SAAUC,MAAOK,EAAOhC,OACvDb,EAAAb,EAAAc,cAACyD,EAAD,CAAgBrB,MAAM,QAAQxB,KAAK,QAAQ9D,KAAK,QAAQuF,YAAY,cAAcvD,MAAO+B,EACzEyB,SAAU5B,EAAK4B,SAAUC,MAAOK,EAAO/B,QACvDd,EAAAb,EAAAc,cAACyD,EAAD,CAAgBrB,MAAM,QAAQxB,KAAK,QAAQyB,YAAY,cAAcvD,MAAOgC,EAC5DwB,SAAU5B,EAAK4B,SAAUC,MAAOK,EAAO9B,QACvDf,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,cAAciC,UAAU,wCAhE5CZ,aCiFVuD,6MAhFb9G,MAAQ,CACNgE,KAAQ,GACRC,MAAQ,GACRC,MAAQ,GACR8B,OAAQ,MAeVC,+CAAW,SAAAzD,EAAOX,EAAUqE,GAAjB,IAAAC,EAAAnC,EAAAC,EAAAC,EAAA6C,EAAAvG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTqD,EAAEG,iBADOF,EAEoBnF,EAAKhB,MAA3BgE,EAFEmC,EAEFnC,KAAMC,EAFJkC,EAEIlC,MAAOC,EAFXiC,EAEWjC,MAEP,KAATF,EAJK,CAAArB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAACkE,OAAQ,CAAChC,KAAM,sBALvBrB,EAAA2D,OAAA,oBAQK,KAAVrC,EARK,CAAAtB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAACkE,OAAQ,CAAC/B,MAAO,uBATxBtB,EAAA2D,OAAA,oBAYK,KAAVpC,EAZK,CAAAvB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAACkE,OAAQ,CAAC9B,MAAO,uBAbxBvB,EAAA2D,OAAA,yBAgBHS,EAAa,CAAC/C,OAAMC,QAAOC,SAC1B1D,EAAYQ,EAAKqC,MAAM2D,MAAMC,OAA7BzG,GAjBEmC,EAAAE,KAAA,GAkBgBC,IAAMoE,IAAN,8CAAAxG,OAAwDF,GAAMuG,GAlB9E,QAkBHtE,EAlBGE,EAAAK,KAmBTnB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAC/CjC,EAAKc,SAAS,CACZkC,KAAQ,GACRC,MAAQ,GACRC,MAAQ,GACR8B,OAAQ,KAEVhF,EAAKqC,MAAMmD,QAAQC,KAAK,KA1Bf,yBAAA9D,EAAAO,SAAAV,EAAAtB,mEA6BXwE,SAAW,SAAAQ,GAAC,OAAIlF,EAAKc,SAAL3B,OAAAuG,EAAA,EAAAvG,CAAA,GAAgB+F,EAAES,OAAO3C,KAAOkC,EAAES,OAAOzE,qNAxChD1B,EAAMU,KAAKmC,MAAM2D,MAAMC,OAAvBzG,YACYsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAArEiC,SAEAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACZkC,KAAOzD,EAAQyD,KACfC,MAAO1D,EAAQ0D,MACfC,MAAO3D,EAAQ2D,2IAmCV,IAAAJ,EAAA5C,KAAA0F,EAC8B1F,KAAKlB,MAAnCgE,EADA4C,EACA5C,KAAMC,EADN2C,EACM3C,MAAOC,EADb0C,EACa1C,MAAO8B,EADpBY,EACoBZ,OAC3B,OACE7C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACDL,EAAYK,EAAZL,SACP,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,gBAGAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAM6C,SAAUnC,EAAKmC,SAASxB,KAAKX,EAAMjC,IACvCsB,EAAAb,EAAAc,cAACyD,EAAD,CAAgBrB,MAAM,OAAOxB,KAAK,OAAOyB,YAAY,aAAavD,MAAO8B,EACzD0B,SAAU5B,EAAK4B,SAAUC,MAAOK,EAAOhC,OACvDb,EAAAb,EAAAc,cAACyD,EAAD,CAAgBrB,MAAM,QAAQxB,KAAK,QAAQ9D,KAAK,QAAQuF,YAAY,cAAcvD,MAAO+B,EACzEyB,SAAU5B,EAAK4B,SAAUC,MAAOK,EAAO/B,QACvDd,EAAAb,EAAAc,cAACyD,EAAD,CAAgBrB,MAAM,QAAQxB,KAAK,QAAQyB,YAAY,cAAcvD,MAAOgC,EAC5DwB,SAAU5B,EAAK4B,SAAUC,MAAOK,EAAO9B,QACvDf,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,iBAAiBiC,UAAU,wCAtE9CZ,aCuBX4D,6MAzBbnH,MAAQ,CACNoH,MAAO,GACPC,KAAM,uFAGY,IAAAvD,EAAA5C,KAClBoG,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtE,GAAI,OAAIa,EAAKhC,SAAS,CAC1BsF,MAAOnE,EAAKmE,MACZC,KAAOpE,EAAKoE,0CAIT,IAAAlB,EACejF,KAAKlB,MAApBoH,EADAjB,EACAiB,MAAOC,EADPlB,EACOkB,KACd,OACElE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKgE,GACLjE,EAAAb,EAAAc,cAAA,SAAIiE,WApBO9D,aCmCJmE,gMAtBX,OACEvE,EAAAb,EAAAc,cAACuE,EAAD,KACExE,EAAAb,EAAAc,cAACwE,EAAA,EAAD,KACEzE,EAAAb,EAAAc,cAAA,OAAKe,UAAU,OACbhB,EAAAb,EAAAc,cAACyE,EAAD,CAAQ5C,SAAS,oBACjB9B,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,KACE3E,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC1B,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWnC,IAC5C5C,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWpB,IACjD3D,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW9C,IACtCjC,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWf,IACrChE,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,CAAOG,UAAW7C,gBAdhB9B,cCDE4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DCbNuB,IAASC,OAAOrF,EAAAb,EAAAc,cAACqF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.9c5273d1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios              from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\r\nimport PropTypes          from 'prop-types';\r\nimport {Consumer}         from \"../../context\";\r\nimport axios              from 'axios';\r\nimport {Link}             from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }\r\n    catch (e) {\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {id, name, email, phone} = this.props.contact;\r\n    const {showContactInfo}        = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name} {' '}\r\n                <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})}\r\n                   className=\"fa fa-sort-down\" style={{cursor: \"pointer\"}}></i>\r\n                <i className=\"fas fa-times\" style={{cursor: \"pointer\", float: \"right\", color: \"red\"}}\r\n                   onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i className=\"fas fa-pencil-alt\"\r\n                     style={{cursor: \"pointer\", float: \"right\", color: \"black\", marginRight: '1rem'}}></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo\r\n                ? (\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone Number: {phone}</li>\r\n                  </ul>\r\n                )\r\n                : null\r\n              }\r\n\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact            from './Contact';\r\nimport {Consumer}         from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact}/>))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React     from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link}    from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const {branding} = props;\r\n  return (\r\n    <nav className=\"nav navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to='/' className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/contact/add' className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/about' className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\nHeader.propTypes    = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default () => {\r\n  return(\r\n    <div>\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <p className='text-secondary'>v1.0.0.</p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n  return(\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page doesn't exist.</p>\r\n    </div>\r\n  );\r\n}","import React      from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label      : PropTypes.string.isRequired,\r\n  name       : PropTypes.string.isRequired,\r\n  value      : PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type       : PropTypes.string.isRequired,\r\n  onChange   : PropTypes.func.isRequired,\r\n  error      : PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, {Component} from 'react';\r\nimport {Consumer}         from \"../../context\";\r\nimport TextInputGroup     from \"../layout/TextInputGroup\";\r\nimport axios              from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name  : '',\r\n    email : '',\r\n    phone : '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone} = this.state;\r\n    //Validation Error\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name is Required'}});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email is Required'}});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone is Required'}});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res        = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n    //Clear State\r\n    this.setState({\r\n      name  : '',\r\n      email : '',\r\n      phone : '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                Add Contact\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name}\r\n                                  onChange={this.onChange} error={errors.name}/>\r\n                  <TextInputGroup label=\"Email\" name=\"email\" type=\"email\" placeholder=\"Enter Email\" value={email}\r\n                                  onChange={this.onChange} error={errors.email}/>\r\n                  <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" value={phone}\r\n                                  onChange={this.onChange} error={errors.phone}/>\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\nimport {Consumer}         from \"../../context\";\r\nimport TextInputGroup     from \"../layout/TextInputGroup\";\r\nimport axios              from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name  : '',\r\n    email : '',\r\n    phone : '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {id} = this.props.match.params;\r\n    const res  = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name : contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone} = this.state;\r\n    //Validation Error\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name is Required'}});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email is Required'}});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone is Required'}});\r\n      return;\r\n    }\r\n    const updContact = {name, email, phone};\r\n    const {id}       = this.props.match.params;\r\n    const res        = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n    this.setState({\r\n      name  : '',\r\n      email : '',\r\n      phone : '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                Edit Contact\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name}\r\n                                  onChange={this.onChange} error={errors.name}/>\r\n                  <TextInputGroup label=\"Email\" name=\"email\" type=\"email\" placeholder=\"Enter Email\" value={email}\r\n                                  onChange={this.onChange} error={errors.email}/>\r\n                  <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" value={phone}\r\n                                  onChange={this.onChange} error={errors.phone}/>\r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React, {Component} from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body : data.body\r\n      }));\r\n  }\r\n\r\n  render() {\r\n    const {title, body} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;","import React, {Component}                       from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts                                 from './component/contacts/Contacts';\nimport Header                                   from './component/layout/Header';\nimport About                                    from './component/pages/About';\nimport NotFound                                 from './component/pages/NotFound';\nimport AddContact                               from './component/contacts/AddContact';\nimport EditContact                              from './component/contacts/EditContact';\nimport Test                                     from './component/test/Test';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider}                               from './context';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/test\" component={Test}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}